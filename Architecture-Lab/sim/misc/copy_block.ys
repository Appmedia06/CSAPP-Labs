# Execution begins at address 0
        .pos 0
        irmovq stack, %rsp      # Set up stack pointer
        call main               # Execute main program
        halt                    # Terminate program

# Sample
        .align 8
# Source block
src:
        .quad 0x00a
        .quad 0x0b0
        .quad 0xc00

# Destination block
dest:
        .quad 0x111
        .quad 0x222
        .quad 0x333

main:
        irmovq src, %rdi
        irmovq dest, %rsi
        irmovq $3, %rdx
        call copy_block
        ret

copy_block:
        irmovq $0, %rax
        irmovq $1, %r8
        irmovq $8, %r9
        andq %rdx, %rdx
        jmp test

loop:
        mrmovq (%rdi), %rbx
        addq %r9, %rdi
        rmmovq %rbx, (%rsi)
        addq %r9, %rsi
        xorq %rbx, %rax
        subq %r8, %rdx

test:
        jne loop
        ret
 
 # Stack starts here and grows to lower addresses
        .pos 0x200
stack:

