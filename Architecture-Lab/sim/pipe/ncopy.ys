#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0;
	iaddq $-3, %rdx     # limit -= 7
	jle R0       		# if so, goto Done:

Load:
    mrmovq (%rdi), %r8 # read val from src...
    mrmovq 8(%rdi), %r9 # read val from src...
    mrmovq 16(%rdi), %r10 # read val from src...
    mrmovq 24(%rdi), %r11 # read val from src...
Store:
    rmmovq %r8, (%rsi) # ...and store it to dst
    rmmovq %r9, 8(%rsi) # ...and store it to dst
    rmmovq %r10, 16(%rsi) # ...and store it to dst
    rmmovq %r11, 24(%rsi) # ...and store it to dst
Loop0:	
	andq %r8, %r8		# val <= 0?
	jle Loop1		# if so, goto Npos:
	iaddq $1, %rax		# count++
Loop1:  
    andq %r9, %r9     # val <= 0?
    jle Loop2       # if so, goto Npos:
    iaddq $1, %rax      # count++
Loop2:  
    andq %r10, %r10     # val <= 0?
    jle Loop3       # if so, goto Npos:
    iaddq $1, %rax      # count++
Loop3:  
    andq %r11, %r11     # val <= 0?
    jle test        # if so, goto Npos:
    iaddq $1, %rax      # count++
test:	
	iaddq $32, %rdi		# src += 8
	iaddq $32, %rsi		# dst += 8
    iaddq $-4, %rdx     # len -= 8
	jg Load 			# if so, goto Loop:
R0:
    iaddq $3, %rdx
    jg R00
    jmp Done
R00:
    mrmovq (%rdi),%r8
    rmmovq %r8, (%rsi)
    andq %r8, %r8
    jle R1
    iaddq $1,%rax
R1:
    iaddq $-1, %rdx
    jg R11
    jmp Done
R11:
    mrmovq 8(%rdi),%r8
    rmmovq %r8, 8(%rsi)
    andq %r8, %r8
    jle R2            
    iaddq $1,%rax
R2:
    iaddq $-1, %rdx
    jg R22
    jmp Done
R22:
    mrmovq 16(%rdi),%r8
    rmmovq %r8, 16(%rsi)
    andq %r8, %r8
    jle Done
    iaddq $1,%rax
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
